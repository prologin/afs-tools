---

include:
  - template: Security/License-Scanning.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml

stages:
  - container build
  - build
  - test
  - qa
  - security
  - deploy

secret_detection:
  stage: security
  interruptible: true
  needs: []

license_scanning:
  stage: qa
  interruptible: true
  needs: []
  before_script:
    - |
      apt-get update
      apt-get install -y --no-install-recommends python3 python3-venv
      curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python3 -
      poetry export --without-hashes --format requirements.txt > requirements.txt
  variables:
    LM_PYTHON_VERSION: 3
    LICENSE_FINDER_CLI_OPTS: "--recursive"

container build:
  stage: container build
  needs: []
  image:
    name: moby/buildkit:latest
    entrypoint: [""]
  before_script:
    - mkdir ~/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > ~/.docker/config.json
  script:
    - |
      buildctl-daemonless.sh build --progress=plain \
          --frontend=dockerfile.v0 \
          --local context=. \
          --local dockerfile=. \
          --output type=image,\"name=$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA\",push=true \
          --import-cache type=registry,ref=$CI_REGISTRY_IMAGE:buildcache \
          --export-cache type=registry,ref=$CI_REGISTRY_IMAGE:buildcache,mode=max

container build ci:
  stage: container build
  needs: []
  image:
    name: moby/buildkit:latest
    entrypoint: [""]
  before_script:
    - mkdir ~/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > ~/.docker/config.json
  script:
    - |
      buildctl-daemonless.sh build --progress=plain \
          --frontend=dockerfile.v0 \
          --local context=. \
          --local dockerfile=. \
          --opt build-arg:INCLUDE_DEV_DEPS=true \
          --output type=image,\"name=$CI_REGISTRY_IMAGE/ci/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA\",push=true \
          --import-cache type=registry,ref=$CI_REGISTRY_IMAGE:buildcache-ci \
          --export-cache type=registry,ref=$CI_REGISTRY_IMAGE:buildcache-ci,mode=max

build:
  stage: build
  needs:
    - container build ci
  image: $CI_REGISTRY_IMAGE/ci/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA
  variables:
    PROJECT_OVERRIDE_VERSION: $CI_COMMIT_TAG
  before_script:
    - poetry self add poetry-arbitrary-version-plugin
  script:
    - poetry build -n -v
  artifacts:
    paths:
      - dist/*

deploy:
  stage: deploy
  image: $CI_REGISTRY_IMAGE/ci/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA
  dependencies:
    - build
  rules:
    - if: $CI_COMMIT_TAG
  variables:
    POETRY_HTTP_BASIC_GITLAB_USERNAME: "gitlab-ci-token"
    POETRY_HTTP_BASIC_GITLAB_PASSWORD: "${CI_JOB_TOKEN}"
    PROJECT_OVERRIDE_VERSION: $CI_COMMIT_TAG
  before_script:
    - poetry self add poetry-arbitrary-version-plugin
    - poetry config repositories.gitlab ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi
  script:
    - poetry publish --verbose --no-interaction -r gitlab

deploy container:
  stage: deploy
  image:
    name: moby/buildkit:latest
    entrypoint: [""]
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  before_script:
    - mkdir ~/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > ~/.docker/config.json
  script:
    - |
      buildctl-daemonless.sh build --progress=plain \
          --frontend=dockerfile.v0 \
          --local context=. \
          --local dockerfile=. \
          --output type=image,\"name=$CI_REGISTRY_IMAGE:${CI_COMMIT_TAG:-latest}\",push=true \
          --import-cache type=registry,ref=$CI_REGISTRY_IMAGE:buildcache \
          --export-cache type=registry,ref=$CI_REGISTRY_IMAGE:buildcache,mode=max
